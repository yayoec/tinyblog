{"remainingRequest":"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/babel-loader/lib/index.js!/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/yanjoe/Documents/www/tinyblog/frontend/admin/src/router/index.js","dependencies":[{"path":"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/src/router/index.js","mtime":1578921320794},{"path":"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.asyncRoutes = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"/Users/yanjoe/Documents/www/tinyblog/frontend/admin/node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\n_vue.default.use(_vueRouter.default);\n/* Layout */\n\n\n/* Router Modules */\n// import componentsRouter from './modules/components'\n// import chartsRouter from './modules/charts'\n// import tableRouter from './modules/table'\n// import nestedRouter from './modules/nested'\n\n/**\n * Note: sub-menu only appear when route children.length >= 1\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\n *\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\n * alwaysShow: true               if set true, will always show the root menu\n *                                if not set alwaysShow, when item has more than one children route,\n *                                it will becomes nested mode, otherwise not show the root menu\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\n * meta : {\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\n    icon: 'svg-name'             the icon show in the sidebar\n    noCache: true                if set true, the page will no be cached(default is false)\n    affix: true                  if set true, the tag will affix in the tags-view\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\n  }\n */\n\n/**\n * constantRoutes\n * a base page that does not have permission requirements\n * all roles can be accessed\n */\nvar constantRoutes = [{\n  path: '/redirect',\n  component: _layout.default,\n  hidden: true,\n  children: [{\n    path: '/redirect/:path(.*)',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/redirect/index'));\n      });\n    }\n  }]\n}, {\n  path: '/login',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/auth-redirect',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/auth-redirect'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error-page/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/401',\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/error-page/401'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: _layout.default,\n  redirect: '/dashboard',\n  children: [{\n    path: 'dashboard',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dashboard/index'));\n      });\n    },\n    name: 'Dashboard',\n    meta: {\n      title: '控制面板',\n      icon: 'dashboard',\n      affix: true\n    }\n  }]\n}, {\n  path: '/profile',\n  component: _layout.default,\n  redirect: '/profile/index',\n  hidden: true,\n  children: [{\n    path: 'index',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/profile/index'));\n      });\n    },\n    name: 'Profile',\n    meta: {\n      title: 'Profile',\n      icon: 'user',\n      noCache: true\n    }\n  }]\n}];\n/**\n * asyncRoutes\n * the routes that need to be dynamically loaded based on user roles\n */\n\nexports.constantRoutes = constantRoutes;\nvar asyncRoutes = [{\n  path: '/permission',\n  component: _layout.default,\n  redirect: '/permission/page',\n  alwaysShow: true,\n  // will always show the root menu\n  name: 'Permission',\n  meta: {\n    title: 'Permission',\n    icon: 'lock',\n    roles: ['admin', 'editor'] // you can set roles in root nav\n\n  },\n  children: [{\n    path: 'page',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/permission/page'));\n      });\n    },\n    name: 'PagePermission',\n    meta: {\n      title: 'Page Permission',\n      roles: ['admin'] // or you can only set roles in sub nav\n\n    }\n  }, {\n    path: 'directive',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/permission/directive'));\n      });\n    },\n    name: 'DirectivePermission',\n    meta: {\n      title: 'Directive Permission' // if do not set roles, means: this page does not require permission\n\n    }\n  }, {\n    path: 'role',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/permission/role'));\n      });\n    },\n    name: 'RolePermission',\n    meta: {\n      title: 'Role Permission',\n      roles: ['admin']\n    }\n  }]\n}, // {\n//   path: '/icon',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/icons/index'),\n//       name: 'Icons',\n//       meta: { title: 'Icons', icon: 'icon', noCache: true }\n//     }\n//   ]\n// },\n\n/** when your routing map is too long, you can split it into small modules **/\n// componentsRouter,\n// chartsRouter,\n// nestedRouter,\n// tableRouter,\n{\n  path: '/article',\n  component: _layout.default,\n  redirect: '/article/list',\n  name: 'Article',\n  meta: {\n    title: '文章管理',\n    icon: 'example'\n  },\n  children: [{\n    path: 'create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/article/create'));\n      });\n    },\n    name: 'create',\n    meta: {\n      title: '写文章',\n      icon: 'edit'\n    }\n  }, {\n    path: 'edit/:id(\\\\d+)',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/article/edit'));\n      });\n    },\n    name: 'edit',\n    meta: {\n      title: '编辑文章',\n      noCache: true,\n      activeMenu: '/article/list'\n    },\n    hidden: true\n  }, {\n    path: '文章列表',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/article/list'));\n      });\n    },\n    name: 'ArticleList',\n    meta: {\n      title: '文章列表',\n      icon: 'list'\n    }\n  }]\n}, {\n  path: '/categoory',\n  component: _layout.default,\n  redirect: '/categoory/list',\n  name: 'Category',\n  meta: {\n    title: '分类标签',\n    icon: 'component'\n  },\n  children: [{\n    path: 'create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/category/create'));\n      });\n    },\n    name: 'create',\n    meta: {\n      title: '创建分类',\n      icon: 'edit'\n    }\n  }, {\n    path: 'edit/:id(\\\\d+)',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/category/edit'));\n      });\n    },\n    name: 'edit',\n    meta: {\n      title: '编辑分类',\n      noCache: true,\n      activeMenu: '/category/list'\n    },\n    hidden: true\n  }, {\n    path: '分类列表',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/category/list'));\n      });\n    },\n    name: 'CategoryList',\n    meta: {\n      title: '分类列表',\n      icon: 'list'\n    }\n  }]\n}, {\n  path: '/setting',\n  component: _layout.default,\n  redirect: '/article/list',\n  name: 'Settings',\n  meta: {\n    title: '设置',\n    icon: 'user'\n  },\n  children: [{\n    path: 'site',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/web-setting/create'));\n      });\n    },\n    name: 'site-setting',\n    meta: {\n      title: '站点设置',\n      icon: 'edit'\n    }\n  }, {\n    path: 'user',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/web-setting/list'));\n      });\n    },\n    name: 'user-setting',\n    meta: {\n      title: '用户设置',\n      icon: 'peoples'\n    }\n  }]\n}, // {\n//   path: '/tab',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/tab/index'),\n//       name: 'Tab',\n//       meta: { title: 'Tab', icon: 'tab' }\n//     }\n//   ]\n// },\n// {\n//   path: '/error',\n//   component: Layout,\n//   redirect: 'noRedirect',\n//   name: 'ErrorPages',\n//   meta: {\n//     title: 'Error Pages',\n//     icon: '404'\n//   },\n//   children: [\n//     {\n//       path: '401',\n//       component: () => import('@/views/error-page/401'),\n//       name: 'Page401',\n//       meta: { title: '401', noCache: true }\n//     },\n//     {\n//       path: '404',\n//       component: () => import('@/views/error-page/404'),\n//       name: 'Page404',\n//       meta: { title: '404', noCache: true }\n//     }\n//   ]\n// },\n// {\n//   path: '/error-log',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'log',\n//       component: () => import('@/views/error-log/index'),\n//       name: 'ErrorLog',\n//       meta: { title: 'Error Log', icon: 'bug' }\n//     }\n//   ]\n// },\n// {\n//   path: '/theme',\n//   component: Layout,\n//   children: [\n//     {\n//       path: 'index',\n//       component: () => import('@/views/theme/index'),\n//       name: 'Theme',\n//       meta: { title: 'Theme', icon: 'theme' }\n//     }\n//   ]\n// },\n// 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\nexports.asyncRoutes = asyncRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}